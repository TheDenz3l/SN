# SwiftNotes Production Docker Compose Override
# Production-specific configurations and optimizations

version: '3.8'

services:
  frontend:
    restart: always
    environment:
      - VITE_API_URL=https://api.swiftnotes.app/api
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
      - VITE_APP_NAME=SwiftNotes
      - VITE_APP_VERSION=1.0.0
      - VITE_DEV_MODE=false
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`swiftnotes.app`) || Host(`www.swiftnotes.app`)"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.redirect-www.redirectregex.regex=^https://www.swiftnotes.app/(.*)"
      - "traefik.http.middlewares.redirect-www.redirectregex.replacement=https://swiftnotes.app/$${1}"
      - "traefik.http.routers.frontend.middlewares=redirect-www"
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  backend:
    restart: always
    environment:
      - NODE_ENV=production
      - PORT=3001
      - FRONTEND_URL=https://swiftnotes.app
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY}
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - BCRYPT_ROUNDS=14
      - SENTRY_DSN=${SENTRY_DSN}
      - LOG_LEVEL=warn
      - ENABLE_RATE_LIMITING=true
      - ENABLE_SMART_QUEUE=true
      - ENABLE_USAGE_MONITORING=true
      - ENABLE_COST_TRACKING=true
      - AUTH_RATE_LIMIT=5
      - GENERAL_RATE_LIMIT=50
      - AI_RATE_LIMIT=10
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.swiftnotes.app`)"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  redis:
    restart: always
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  traefik:
    restart: always
    command:
      - --api.dashboard=false
      - --api.insecure=false
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --log.level=WARN
      - --accesslog=true
      - --metrics.prometheus=true
      - --metrics.prometheus.addEntryPointsLabels=true
      - --metrics.prometheus.addServicesLabels=true
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M

  prometheus:
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M

  grafana:
    restart: always
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  loki:
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  promtail:
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
        reservations:
          cpus: '0.05'
          memory: 64M

# Production-specific volumes with backup configurations
volumes:
  redis-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/swiftnotes/data/redis
  
  prometheus-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/swiftnotes/data/prometheus
  
  grafana-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/swiftnotes/data/grafana
  
  loki-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/swiftnotes/data/loki
