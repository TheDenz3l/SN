#!/bin/bash

# SwiftNotes Security Pre-commit Hook
# Prevents committing sensitive files and data

echo "üîç Running security checks..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Flag to track if we should block the commit
BLOCK_COMMIT=false

# Check for sensitive files
echo "Checking for sensitive files..."

# List of sensitive file patterns
SENSITIVE_FILES=(
    "\.env$"
    "\.env\.production$"
    "\.env\.staging$"
    "\.env\.local$"
    "config/secrets\.json$"
    "secrets/"
    "\.key$"
    "\.pem$"
    "\.p12$"
    "\.pfx$"
    "\.crt$"
    "\.cer$"
    "\.der$"
    "logs/.*\.log$"
)

# Check staged files against sensitive patterns
for pattern in "${SENSITIVE_FILES[@]}"; do
    if git diff --cached --name-only | grep -E "$pattern"; then
        echo -e "${RED}‚ùå BLOCKED: Attempting to commit sensitive file matching pattern: $pattern${NC}"
        BLOCK_COMMIT=true
    fi
done

# Final decision
if [ "$BLOCK_COMMIT" = true ]; then
    echo -e "\n${RED}üö´ COMMIT BLOCKED due to security concerns!${NC}"
    echo -e "${YELLOW}Please fix the issues above and try again.${NC}"
    exit 1
else
    echo -e "\n${GREEN}‚úÖ Security checks passed!${NC}"
    exit 0
fi
